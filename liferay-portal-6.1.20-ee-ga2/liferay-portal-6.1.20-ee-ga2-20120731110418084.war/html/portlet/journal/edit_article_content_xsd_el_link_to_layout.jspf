<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */
--%>

<%
layoutView = layoutLister.getLayoutView(scopeGroupId, privateLayout, "root", locale);

layoutList = layoutView.getList();

if (layoutList.size() > 1) {
%>

	<optgroup label="<%= LanguageUtil.get(pageContext, privateLayout ? "private-pages" : "public-pages") %>">

	<%
	for (int i = 0; i < layoutList.size(); i++) {

		// id | parentId | ls | obj id | name | img | depth

		String layoutDesc = (String)layoutList.get(i);

		String[] nodeValues = StringUtil.split(layoutDesc, '|');

		long objId = GetterUtil.getLong(nodeValues[3]);
		String name = nodeValues[4];

		int depth2 = 0;

		if (i != 0) {
			depth2 = GetterUtil.getInteger(nodeValues[6]);
		}

		for (int j = 0; j < depth2; j++) {
			name = "-&nbsp;" + name;
		}

		Layout linkableLayout = null;

		try {
			linkableLayout = LayoutLocalServiceUtil.getLayout(objId);
		}
		catch (Exception e) {
		}

		if (linkableLayout != null) {
			if (elContent.indexOf(StringPool.AT) == -1) {
				elContent += "@public";
			}

			String suffix = null;

			if (privateLayout) {
				if (linkableLayout.getGroup().isUser()) {
					suffix = "private-user";
				}
				else {
					suffix = "private-group";
				}
			}
			else {
				suffix = "public";
			}

			String layoutLink = linkableLayout.getLayoutId() + StringPool.AT + suffix;
	%>

			<option <%= elContent.equals(layoutLink) ? "selected" : "" %> value="<%= layoutLink %>"><%= name %></option>

	<%
		}
	}
	%>

	</optgroup>

<%
}
%>